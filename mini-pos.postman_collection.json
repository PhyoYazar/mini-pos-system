{
	"info": {
		"_postman_id": "6cbdf73f-0b99-412d-a63a-978650e9403e",
		"name": "mini-pos",
		"description": "# Mini POS System API Documentation\n1. user (CRUD)\n2. auth (Login, SignUp)\n3. category (CRUD)\n4. product (CRUD)\n5. order (CRUD)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18586694"
	},
	"item": [
		{
			"name": "user by admin permission",
			"item": [
				{
					"name": "Get All Users",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/users",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"users"
							]
						},
						"description": "- look all users accounts that `active` is true\n- `active` false (soft delete) account can only see from Database"
					},
					"response": []
				},
				{
					"name": "Get User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/users/63d5ec907167c99b898344b9",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"63d5ec907167c99b898344b9"
							]
						},
						"description": "- get user by Id"
					},
					"response": []
				},
				{
					"name": "Create User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"test\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/users",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"users"
							]
						},
						"description": "- can't create user by this endpoint,\n- if we want to create user, we must use `signUp` api endpoint from `auth` folder"
					},
					"response": []
				},
				{
					"name": "Update User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"updated by superadmin again 12...\",\n  \"email\": \"user1@gmail.com\",\n  \"password\": \"123456\",\n  \"active\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/users/63d64a1114803b251c8515fa",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"63d64a1114803b251c8515fa"
							]
						},
						"description": "- UPDATE user by Id"
					},
					"response": []
				},
				{
					"name": "Delete User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/users/63d63ec6e0304bf9c06cb2af",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"63d63ec6e0304bf9c06cb2af"
							]
						},
						"description": "- DELETE user by Id"
					},
					"response": []
				}
			],
			"description": "## User By Admin Permission\n\n- This Folder is only for `Admin` role account\n- only `admin` account can CRUD"
		},
		{
			"name": "category",
			"item": [
				{
					"name": "Get All Category",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/category",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"category"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Category",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/category/63d5c1c97fd76dbd8842bec1",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"category",
								"63d5c1c97fd76dbd8842bec1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Category",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Category 5\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/category",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"category"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Category",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Category 6\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/category/63d5c1c97fd76dbd8842bec1",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"category",
								"63d5c1c97fd76dbd8842bec1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Category",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/category/63d5c9abae5c92e82902bb5c",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"category",
								"63d5c9abae5c92e82902bb5c"
							]
						}
					},
					"response": []
				}
			],
			"description": "## Category\n\n- category CRUD"
		},
		{
			"name": "product",
			"item": [
				{
					"name": "Get All Product",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/products?search=zuuu",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"products"
							],
							"query": [
								{
									"key": "category",
									"value": "63d5c1c57fd76dbd8842bebf",
									"disabled": true
								},
								{
									"key": "search",
									"value": "zuuu"
								},
								{
									"key": "sort",
									"value": "price",
									"disabled": true
								},
								{
									"key": "price[lte]",
									"value": "5000",
									"disabled": true
								},
								{
									"key": "page",
									"value": "2",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "10",
									"disabled": true
								},
								{
									"key": "fields",
									"value": "-createdAt,-updatedAt",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Product",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/products/63d5c49513e3f950d96f8689",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								"63d5c49513e3f950d96f8689"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"bus\",\n  \"category\": \"63d5c1c97fd76dbd8842bec1\",\n  \"price\": 12500\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/products",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Product",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"adv car\",\n  \"price\": 200000\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/products/63d5c4e713e3f950d96f8695",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								"63d5c4e713e3f950d96f8695"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Product",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/products/63d5c4f713e3f950d96f8697",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								"63d5c4f713e3f950d96f8697"
							]
						}
					},
					"response": []
				}
			],
			"description": "## Product\n\n- product CRUD"
		},
		{
			"name": "order",
			"item": [
				{
					"name": "Pay Now",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/orders/payNow",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"orders",
								"payNow"
							]
						},
						"description": "- `Pay Now` endpoint is hard delete of user's orders\n----------------------------------\n- We don't need to pay user Id, endpoint will use Login user Id\n- If we want to pay user Id, we can look `user folder` `Pay Now` endpoint."
					},
					"response": []
				},
				{
					"name": "Get All Orders Details By User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/orders/details",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"orders",
								"details"
							]
						},
						"description": "- `Get All Orders Details By User` endpoint is to take all orders array of users and (subTotal, tax , total) result amounts\n    \n\n---\n\n- We don't need to pay user Id, endpoint will use Login user Id.\n- If we want to pay user Id, we can look `user folder` `Get All Orders Details By User` endpoint."
					},
					"response": []
				},
				{
					"name": "Get All Orders By User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/users/63d5b88440a20fdac6bd62e0/orders",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"63d5b88440a20fdac6bd62e0",
								"orders"
							]
						},
						"description": "- get all orders that user made"
					},
					"response": []
				},
				{
					"name": "Get All Order",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/orders",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"orders"
							]
						},
						"description": "- get All orders"
					},
					"response": []
				},
				{
					"name": "Get Order",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/orders/63d5d754167b65714e4cd356",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"orders",
								"63d5d754167b65714e4cd356"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Order",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \n  \"product\": \"63d5c50013e3f950d96f8699\",\n  \"product_price\": 16500\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/orders",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"orders"
							]
						},
						"description": "1. We can create Order by giving only `product` and `product_price`. If we only give `product` and `product_price` from body(json), this order will create for `LOGIN USER`\n    \n\n---\n\n1. We can also give `user` (id) from body(json) alongside with `product` and `product_price`. If we give `user` id, order will create for `giving user id` from body(json).\n    \n\n---\n\n1. Also creating order is already exist (means user id and product id is exist in DB), this `create order` endpoint will update total_product (+1) of same user/product id order."
					},
					"response": []
				},
				{
					"name": "Update Order",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"total_products\": 4,\n  \"bought\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/orders/63d5c4bc13e3f950d96f868f",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"orders",
								"63d5c4bc13e3f950d96f868f"
							]
						},
						"description": "- I use this `update order` endpoint for (+)increasing or (-)reducing of order total_product."
					},
					"response": []
				},
				{
					"name": "Delete Order",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/orders/63d5f4f0aad6a8245fa04af9",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"orders",
								"63d5f4f0aad6a8245fa04af9"
							]
						}
					},
					"response": []
				}
			],
			"description": "## Order\n\n- order CRUD\n    \n\n1. `Pay Now` endpoint is to delete user's orders (act like Buy).\n2. `Get All Orders By User` endpoint so to take all user's orders.\n3. `Get All Orders Details By User` endpoint is to take all user's orders and total result of all orders."
		},
		{
			"name": "auth",
			"item": [
				{
					"name": "Sign Up",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"jwt\", pm.response.json().token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"admin\",\n\t\"email\": \"admin@gmail.com\",\n\t\"password\": \"123456\",\n\t\"passwordConfirm\": \"123456\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/signup",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"signup"
							]
						},
						"description": "- We must use this `SignUp` endpoint to create User,\n\n- Only this endpoint can create user account"
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"jwt\", pm.response.json().token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"admin@gmail.com\",\n\t\"password\": \"123456\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/login",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						},
						"description": "- login endpoint"
					},
					"response": []
				}
			],
			"description": "## Authentication (login, signup)"
		},
		{
			"name": "user",
			"item": [
				{
					"name": "Pay Now",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/users/63d5ea470428182741af2e10/orders/payNow",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"63d5ea470428182741af2e10",
								"orders",
								"payNow"
							]
						},
						"description": "- `Pay Now` endpoint is hard delete of user's orders\n    \n\n---\n\n- this endpoint use `users route` to take UserId from params"
					},
					"response": []
				},
				{
					"name": "Get All Orders Details By User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/users/63d5ec907167c99b898344b9/orders/details",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"63d5ec907167c99b898344b9",
								"orders",
								"details"
							]
						},
						"description": "- `Get All Orders Details By User` endpoint is to take all orders array of user and (subTotal, tax , total) result amounts\n    \n\n---\n\n- this endpoint use `users route` to take UserId from params"
					},
					"response": []
				},
				{
					"name": "Get Me",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/users/me",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"me"
							]
						},
						"description": "- get Login user Info"
					},
					"response": []
				},
				{
					"name": "Update Me",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"user Updated\",\n  \"email\": \"user@update.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/users/updateMe",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"updateMe"
							]
						},
						"description": "- only `name` and `email` can updated"
					},
					"response": []
				},
				{
					"name": "Update My Password",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"passwordCurrent\": \"123456\",\n  \"password\": \"1234567\",\n  \"passwordConfirm\": \"1234567\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/users/updateMyPassword",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"updateMyPassword"
							]
						},
						"description": "- if login, user can update password"
					},
					"response": []
				},
				{
					"name": "Delete Me",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/users/deleteMe",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"deleteMe"
							]
						},
						"description": "- user can delete her/himself, but this endpoint is `soft delete`"
					},
					"response": []
				}
			],
			"description": "## user permission"
		}
	]
}